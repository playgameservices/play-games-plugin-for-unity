Version 0.9.34
    Bug Fixes:
        * #1162 - Cannot build from source
        * #1179 - Interfaces should not be under `#if`
        * #1175 - Play-services version needs to be updated to 9.0.0
        * #1180 - PlayGamesUserProfile.Equals(object obj)` implemented incorrectly
    New Features:
        * #1085 - Add SpendProbability player stat.
Version 0.9.33
    Bug Fixes:
        * #1032 - Not able to get user's email.
        * #1040 - Cannot parse PBX project for iOS
        * #1068 - CreateWithInvitationScreen callback called twice on cancel.
        * #1082 - Changed postbuild order to avoid Invalid PBX project.
        * #1088 - Disable BITCODE for iOS build
        * #1105 - GetServerAuthCode callback should be on game thread.
                    (also moved other callbacks to be on game thread).
        * Improved jar resolver logic during setup.
    New Features:
        * #990 - Support callback for getting email address.
        * Removed dependency on Google+.
Version 0.9.32
    Bug Fixes:
        * #989 - Fixed misleading messages about RTMP when authenticating.
        * #999 - Fixed BuildTarget.iOS reference when using Unity 4.x.
        * #1004 - Upgrading from older version of plugin did not remove unused files.
        * #1010 - Updated documentation about which Android SDK components
            are needed.
        * Updated dependency pattern for android-support-v4 to be 23.1+.
    New Features:
        * Play-services-jar resolver update to 1.1.1.
            See https://github.com/googlesamples/unity-jar-resolver/blob/master/CHANGELOG.md
            for details on the changes.
        * Added plugin version to manifest.
Version 0.9.31a
    Bug Fixes:
        * #977 - IsConnectedToRoom always returned false, causing local player
                to be removed from real time multiplayer room.
        * #971 - NO_GPGS did not remove the Cocoapod dependencies corrrectly.
Version 0.9.31
    New Features:
        * PlayGamesAchievement (the object returned by
            PlayGamesPlatform.LoadAchievements) now includes the current number
            of steps and the total number of steps for the corresponding
            achievement.
        * Play-services-jar-resolver updated to 1.1.  This fixes the
            problem of include play-services-measurement which has a variable
            in the AndroidManifest.xml file.
    Bug Fixes:
        * #935 include IFDEF to allow editing in unsupported platforms.
Version 0.9.30
    ** BREAKING CHANGES **
        * `PlayerStats` is now a standalone class,
            rather than a subclass of `PlayGamesLocalUser`.
            All existing references to `PlayGamesLocalUser.PlayerStats`
            should now directly refer to `PlayerStats`.
        * The `NumOfSessions` property in `PlayerStats` has been renamed
            `NumberOfSessions` to be consistent with other properties.
    New Features:
        * Rebase PlayerStats API to use the Play Games C++ SDK.
        * PlayerStats API now supported on iOS.
        * Added an option to PlayGamesClientConfiguration to require Google+.
        * Updated to use GPGS C++ SDK version 2.1.
        * Deprecated GetIdToken and GetAccessToken.  Applications should use
            `PlayGamesPlatform.GetServerAuthCode()` to use the player's identity
            on the server side.
        * Updated configuration dialogs exposing the **Require Google Plus** property.
            This property should be false if possible, reducing the number of
            scopes and permissions the player has to allow.  Game developers should
            use PlayGamesPlatform.GetServerAuthCode() to pass the player's OAuth
            credentials to the server, and use Player.Id when possible for a persistent,
            unique identifier for the player rather than email address.
    Bug Fixes:
        * #917 iOS 9, game freeze after closing authentication window.
        * #919 Resolves Android jars even when target is not Android.
        * #868 Avoid memory allocations in the PlayGamesHelperObject.
        * #865 GetIdToken needs to be asynchronous.
Version 0.9.28
        ** BREAKING CHANGES **

        The jar resolution process for importing Play Services has been
        standardized with the other Google plugins.  If you are upgrading
        from 0.9.27, you will need to delete the Assets/GooglePlayGames/Editor
        directory and restart Unity, then re-import version 0.9.28.

    New Features:
        * Integrated Play-services-jar resolver plugin for improved compatibility.
Version 0.9.27a
    Bug Fixes:
        * #809 Unity 5.3 namespace conflict
Version 0.9.27
    New Features:
        * Updating Android email and token access for new permissions model.
        * Specify directory for generated game resource constants.
        * Improved plugin initialization and setup.
        * Added getChurnProbability() to PlayerStats.
    Bug Fixes:
        * #750 AndroidJavaProxy not found when building for iOS.
        * #757 Can only start coroutine from main thread.
        * #771 Documentation update: what are "Android Resources"
        * #772 Disable bitcode in podfile
        * #777 Can not get the list of friend images.
        * #785 Regression on reportProgress for incremental achievement.
        * #610 Stripped version of Play Services client library.
        * #565 Minimize client library to avoid 65k dex limit.
        * #323 Support for split client aars.
Version 0.9.26
    New Features:
        * #666 Expose invitation property for Real time game.
        * Implement PlayerStats API for the local user.
        * Requires version 8.1.5 of play services SDK
    Bug Fixes:
        * #696 Validate constants classname during setup.
        * #709 ShowWaitingRoom cancels match.
        * #712 Waiting room does not appear
        * #719 Extra web client label in ios Setup dialog
        * #726 inviter profile image not loading
        * #722 Social.localUser.id throws NullPointerException
Version 0.9.25 (codename: frengle)
    11 Sept 2015
    ** BREAKING CHANGES **
       * Cloud Save service (AppState) has been removed.
       * The setup dialog now requires the generated resource data from
            Google Play Developer Console.  This reduces the number of
            copy & pastes needed and makes it harder to make a mistake with the
            client id.
    New Features:
       * Updated Configuration setup using Resource data from Play Console.
       * Added support for exclusiveBitmask in Turnbased quickmatches.
       * Implementing Google Auth 2.0 for iOS authentication
       * #120 implement setStepsAtLeast for achievements
       * #274 Added the score reception functionality - method LoadCurrentScore
       * #256 Get all turn-based invitations
       * #259 implement LoadAchievements
       * #186 Return Leaderboard Rank?
       * #380 Callback on CreateWithInvitationScreen
       * #480 Get score rank after submitting
       * #503 LoadScores not implemented
       * #546 Loading friends of logged in user. (Thanks @ashkan-saeedi-mazdeh
                for the initial implementation).
       * #617 Get all turn-based matches
    Bug Fixes:
       * #182 Response to Submit Score or Load Scores
       * #387 OnLeftRoom not called when application is paused
       * #445 Variant error in turn based match
       * #563 Custom UI for invitation UI.
       * #614 OnRoomConnected() getting called twice after implementing ShowWaitingRoomUI
       * #619 NO_GPGS does not work with Symlink Unity libraries
       * #655 Authenticate fails at first, then succeeds second time
Version 0.9.21
  **BREAKING CHANGES**
       * #382 Callback for declined invitation when creating RTMP room
    This change adds the method `OnParticipantLeft` to the
 `RealTimeMultiplayerListener` interface.  Existing games that use this interface
need to add an implementation of this method.
  New Features:
       * #136 Callback for ShowLeaderboardUI()
       * #392 Support for Default waiting room for RTMP
       * #498 Bitmask filter in CreateQuickGame
       * #537 Exposing Saved Games Delete API
       * iOS builds will use Cocoapods if installed to build xcode project.
  Bug Fixes
       * #440 No callback from ReportProgress
       * #444 Can Rematch always returns false
       * #483 IncrementAchievement does not update Achievement data cache
       * #488 Peers disconnected right after OnRoomConnected
       * #568 Exception with null or empty image URL
       * Fixed Setup dialogs not laidout correctly.
2015-05-01 Version 0.9.20 (codename: ewokian)
   New Features:
       * Support for Events and Quests
       * Support for Nearby Connections
   Bug Fixes:
       * #275 Plugin crashes when sending invite for iOS RTMP
       * #326 Not always receiving invitations in iOS
       * #363 Save Games not working on iOS
       * #375 Authentication Return calls before initialization done
       * #379 OnPeersDisconnected(string[] participantIds) is never called
       * #443 ERROR_NOT_AUTHORIZED on re-login
       * #453 NO_GPGS causes unreachable code warnings
       * #454 Error building Player: IOException: android-support-v4.jar already exists
Version 0.9.15 (codename: auto-dogey5)
    New Features:
        * #276 Added support for excluding Google Play Game Services for iOS build (NO_GPGS)
    Bug Fixes:
        * #376 Moved Editor scripts into GooglePlayGames/Editor to reduce script sprawl.
        * #331 Corrected Download menu item text.
        * #331 Added support for new android-support jar location.
        * #331 Removed Google play services version check when building.
        * #361 Fixed player image not refreshed when changing players.
        * #318 Removed armeabi libraries which broke Unity 5 building.
        * #371 Unable to reshow Achievement or Leaderboard UI after Home button is pressed
Version 0.9.12 (codename: auto-dogey)
    New features:
        * Refactored AndroidSetup script to facilitate automated builds.
        * Refactored Samples to be packaged as custom packaged Assets vs. projects.
Version 0.9.11 (codename: extra-dogey)
    New features:
        * Image property of IUserProfile implemented
        * An implementation of Saved Games is now available. This obviates the old
          cloud save feature, which is deprecated and will be removed. See
          ISavedGameClient.cs for more details.
    API Changes:
        * RTMP Clients will no longer automatically call LeaveRoom when
          they are removed from the connected set. Also, the local player
          will never appear as a participant in
          OnPeersConnected/OnPeersDisconnected.
        * The PlayGamesPlatform must be configured before it can be used.
          See PlayGamesClientConfiguration, PlayGamesPlatform.InitializeInstance,
          and PlayGamesClientFactory.GetPlatformPlayGamesClient.
    Bug Fixes:
        * #309 - LeaderboardManager calls ShowAllUI when using leaderboard id


2014-11-14 Version 0.9.10 (codename: doge)
    This release is a major rearchitecting of the plugin to use
    the Play Games C++ SDK. This allows us to re-use the same code on
    all supported platforms, reducing codesize and decreasing the
    work required to add new features. This release makes few
    developer-facing API changes, apart from those required for
    correctness reasons.

    New features:
        * Post-process build is handled by pure C# code rather than
          bash / shell scripts.
        * Implemented on top of the cross platform C++ Play Games SDK
    API Changes:
        * Conversions from int to uint where applicable:
            - TurnBasedMatch.AvailableAutomatchSlots
            - TurnBasedMatch.Variant
            - IPlayGamesClient.IncrementAchievement
            - IRealTimeMultiplayerClient.CreateQuickGame
            - IRealTimeMultiplayerClient.CreateWithInvitationScreen
            - ITurnBasedMultiplayerClient.CreateQuickGame
            - ITurnBasedMultiplayerClient.CreateWithInvitationScreen
        * Removes support for cloud state on iOS (a crossplatform
          alternative is coming soon).
        * Removes cloud state encrypter (only used by iOS).
        * Real Time multiplayer calls will fail immediately when the
          current match is being left or is shutdown.
        * Turn-based multiplayer APIs now take instances of TurnBasedMatch
          rather than just match ID. This is required for correctness
          (the previous API allowed silently overwriting updated matches).


2014-03-17 Version 0.9.00 (codename: cuiaba)

    New features:
        * Turn-based multiplayer (iOS, Android)
        * Real-time multiplayer (iOS, Android)
    Bug fixes:
        * #49 - double cancellation necessary
        * #40 - add account crashes app
        * #25 - Action Scheduled for Later
        * properly close Achievement buffer
        * fix memory management on iOS
        * minor fixes

2014-02-04 Version 0.8.01 (codename: brasilia)

    Updates all plug in code to use new Google Play Services
    programming pattern (GoogleApiClient) and provides a few
    bug fixes.

    * References to GamesClient and AppStateClient updated to use GoogleApiClient
    * Bug fix: GetUserId() occasionally causing crashes on IOS
    * Bug fix: IsAuthenticated() returning true immediatly after SignOut()
    * Bug fix: GPGSAppController.m missing call to super
    * Bug fix: Error dialogs pop up briefly when no network available
    * Bug fix: PostProcessBuildPlayer not friendly with other plugins
    * Bug fix: Missing AddressBook.framework in iOS build instructions

2013-12-10 Version 0.8.00 (codename: altamira)

    Initial launch.

